
# Crie uma classe para representar as cartas. Cada carta deve ter um valor e um naipe. Você pode usar uma tupla para representar esses atributos, por exemplo:

class Carta:
  def __init__(self, valor, naipe):
    self.valor = valor
    self.naipe = naipe
    
# Crie uma classe para representar o baralho. O baralho deve conter uma lista de cartas e deve ter métodos para adicionar cartas, embaralhar as cartas e retirar cartas. Aqui está um exemplo de como essa classe poderia ser implementada:

import random

class Baralho:
  def __init__(self):
    self.cartas = []

  def adicionar_carta(self, carta):
    self.cartas.append(carta)

  def embaralhar(self):
    random.shuffle(self.cartas)

  def retirar_carta(self):
    return self.cartas.pop()
# Crie uma classe para representar os jogadores. Cada jogador deve ter um nome e uma mão (uma lista de cartas). Você pode adicionar métodos para adicionar cartas à mão do jogador e para mostrar a mão do jogador. Aqui está um exemplo de como essa classe poderia ser implementada:

class Jogador:
  def __init__(self, nome):
    self.nome = nome
    self.mao = []

  def adicionar_carta(self, carta):
    self.mao.append(carta)

  def mostrar_mao(self):
    for carta in self.mao:
      print(f'{carta.valor} de {carta.naipe}')
# Crie uma classe para representar o jogo. Essa classe deve ter um baralho e uma lista de jogadores. Ela deve ter métodos para iniciar o jogo, distribuir as cartas e determinar o vencedor. Aqui está um exemplo de como essa classe poderia ser implementada:

class Jogo:
  def __init__(self, nomes_jogadores):
    self.baralho = Baralho()
    self.jogadores = []
    for nome in nomes_jogadores:
      jogador = Jogador(nome)
      self.jogadores.append(jogador)

  def distribuir_cartas(self):
    for jogador in self.jogadores:
      for i in range(5):
        jogador.adicionar_carta(self.baralho.retirar_carta())
